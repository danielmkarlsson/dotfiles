:set prompt ""

:module Sound.Tidal.Context

let (rmf, rmf_p) = pF "rmf" Nothing
let (rma, rma_p) = pF "rma" Nothing
let (rmd, rmd_p) = pF "rmd" Nothing
let (rmx, rmx_p) = pF "rmx" Nothing

import Sound.Tidal.SpectralTricks
import Sound.Tidal.MIDI.Context
import Sound.Tidal.MIDI.Stream
import Sound.Tidal.MIDI.Synth
import Sound.Tidal.MIDI.CC
devs <- midiDevices
m1 <- midiStream devs "IAC 1" 1 ccallController
m2 <- midiStream devs "IAC 2" 1 ccallController
m3 <- midiStream devs "IAC 3" 1 ccallController
m4 <- midiStream devs "IAC 4" 1 ccallController
m5 <- midiStream devs "IAC 5" 1 ccallController
m6 <- midiStream devs "IAC 6" 1 ccallController
m7 <- midiStream devs "QUAD-CAPTURE" 1 ccallController

(cps, nudger, getNow) <- cpsUtils'

(d1,t1) <- superDirtSetters getNow
(d2,t2) <- superDirtSetters getNow
(d3,t3) <- superDirtSetters getNow
(d4,t4) <- superDirtSetters getNow
(d5,t5) <- superDirtSetters getNow
(d6,t6) <- superDirtSetters getNow
(d7,t7) <- superDirtSetters getNow
(d8,t8) <- superDirtSetters getNow
(d9,t9) <- superDirtSetters getNow
(d10,t10) <- superDirtSetters getNow

(c1,ct1) <- dirtSetters getNow
(c2,ct2) <- dirtSetters getNow
(c3,ct3) <- dirtSetters getNow
(c4,ct4) <- dirtSetters getNow
(c5,ct5) <- dirtSetters getNow
(c6,ct6) <- dirtSetters getNow
(c7,ct7) <- dirtSetters getNow
(c8,ct8) <- dirtSetters getNow
(c9,ct9) <- dirtSetters getNow
(c10,ct10) <- dirtSetters getNow

let rep = discretise
let bps x = cps (x/2)
let hush = mapM_ ($ silence) [m1,m2,m3,m4,m5,m6,m7,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,d1,d2,d3,d4,d5,d6,d7,d8,d9,d10]
let solo = (>>) hush
let wchoose values weights = choose $ concatMap (\x -> replicate (fst x) (snd x)) (zip values weights)

:set prompt ""
